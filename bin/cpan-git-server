#! /usr/bin/env perl
use Mojolicious::Lite;
use FindBin;
BEGIN { push @INC, "$FindBin::RealBin/../lib" if -f "$FindBin::RealBin/../dist.ini" }
use CPAN::Mirror::InGit;
use v5.36;
my $repo= $ENV{GIT_DIR};
if (!$repo) {
   for (0 .. $#ARGV) {
      if ($ARGV[$_] =~ /^--git-dir(?:=(.*))?/) {
         splice(@ARGV, $_, 1);
         $repo= $1 // splice(@ARGV, $_, 1);
         last;
      }
   }
}
defined $repo or die "Require --git-dir=X option or GIT_DIR=X environment variable\n";
-d $repo or die "No such directory: '$repo'\n";

my $gitmirror= CPAN::Mirror::InGit->new(repo => $repo);

get '/:branch/*filepath' => sub ($c) {
   my $branch= $c->param('branch');
   my $path= $c->param('filepath');
   say "Serve branch $branch path $path";
   my $snapshot= $gitmirror->snapshot($branch);
   my $blob= $snapshot->get_blob($path);
   my ($basename)= ($path =~ m,([^/]+)$,);
   $c->res->code(200);
   $c->res->headers->content_disposition("attachment; filename=$basename;");
   $c->render(data => $blob->content);
   #$c->res->body($fh);
};

app->start;
